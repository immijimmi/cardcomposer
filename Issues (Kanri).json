{
  "columns": [
    {
      "cards": [],
      "id": "itzi87y1jxk60w8ppzj0z6tp",
      "title": "Notes"
    },
    {
      "cards": [],
      "id": "qqlgedz2grcezc5crjqo9jnu",
      "title": "Ideas"
    },
    {
      "cards": [],
      "id": "kz1t457fiblfbas8s7mxs0pj",
      "title": "Issues"
    },
    {
      "cards": [
        {
          "description": "- Any exceptions thrown due to incorrect step data should indicate where in the data the problem occurred. Preferably as specifically as possible, but more importantly done in a way that does not require constant maintenance.\n  - With that in mind, possibly a try/except around `image = step(image, step, self)` which then catches and re-throws the exception with the additional information that the exception was due to incorrect step data\n  - Alternatively, are there any generic data validation libraries that could be worked with?",
          "name": "Data Validation & Invalid Data Error Handling"
        }
      ],
      "id": "kpk0wn7cyclskdefovgk84pm",
      "title": "Icebox"
    },
    {
      "cards": [
        {
          "description": "- Step which prints text on a card face\n- Should require a point location, font, size & color",
          "name": "Text Step"
        }
      ],
      "id": "s3svm1k7ljtf51in0uzs23xi",
      "title": "Backlog"
    },
    {
      "cards": [],
      "id": "nqa0263wpbpu6hbjugdg0ny1",
      "title": "Urgent"
    },
    {
      "cards": [],
      "id": "e5tot30hst4jss96m666k5oo",
      "title": "Doing"
    },
    {
      "cards": [],
      "id": "t989tdx1pj14i8am5hyftqvd",
      "title": "Done"
    }
  ],
  "id": "ik01vu8a0wkvxnd42giodbpf",
  "lastEdited": "2023-11-09T12:04:20.027Z",
  "title": "cardcomposer"
}